name: Run Tuning Client Tests

on:
  push:
    branches: ['**']  # 全ブランチでのpush時に実行
  pull_request:
    branches: [main, develop]  # main, developへのマージ時に実行
  workflow_dispatch:
    inputs:
      client_count:
        description: "Number of clients to test"
        required: false
        default: "3,5,10"
        type: string
      chunks_per_client:
        description: "Chunks per client"
        required: false
        default: "15"
        type: string
      chunk_size:
        description: "Chunk size in bytes"
        required: false
        default: "1024"
        type: string
      test_duration:
        description: "Test duration in seconds"
        required: false
        default: "10"
        type: string
      pool_enabled:
        description: "Enable connection pool"
        required: false
        default: true
        type: boolean

env:
  # Default environment variables for tuning tests
  CLIENT_COUNT: ${{ github.event.inputs.client_count || '3,5,10' }}
  CHUNKS_PER_CLIENT: ${{ github.event.inputs.chunks_per_client || '15' }}
  CHUNK_SIZE: ${{ github.event.inputs.chunk_size || '1024' }}
  TEST_DURATION: ${{ github.event.inputs.test_duration || '10' }}
  POOL_ENABLED: ${{ github.event.inputs.pool_enabled || 'true' }}

jobs:
  run-tuning-client:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        client_count: [3, 5, 10, 25]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23"

      - name: Install dependencies
        run: go mod download

      - name: Verify files
        run: |
          echo "Checking tuning client files..."
          ls -la cmd/tuning_client/

      - name: Start server in background
        run: |
          go run main.go &
          SERVER_PID=$!
          echo $SERVER_PID > server.pid
          sleep 5
          echo "Server started with PID: $SERVER_PID"

      - name: Run tuning client test
        run: |
          echo "=== Running tuning client test ==="
          echo "Configuration:"
          echo "  - Client count: ${{ matrix.client_count }}"
          echo "  - Chunks per client: ${{ env.CHUNKS_PER_CLIENT }}"
          echo "  - Chunk size: ${{ env.CHUNK_SIZE }}"
          echo "  - Test duration: ${{ env.TEST_DURATION }}"
          echo "  - Pool enabled: ${{ env.POOL_ENABLED }}"

          timeout 30 bash -c "CLIENT_COUNT=${{ matrix.client_count }} CHUNKS_PER_CLIENT=${{ env.CHUNKS_PER_CLIENT }} CHUNK_SIZE=${{ env.CHUNK_SIZE }} TEST_DURATION=${{ env.TEST_DURATION }} POOL_ENABLED=${{ env.POOL_ENABLED }} go run cmd/tuning_client/main.go" || echo "Test completed"

      - name: Stop server
        run: |
          if [ -f server.pid ]; then
            kill $(cat server.pid) || echo "Server already stopped"
            rm server.pid
          fi

      - name: Build tuning client binary
        run: |
          echo "=== Building tuning client ==="
          go build -o tuning_client ./cmd/tuning_client
          ls -la tuning_client

      - name: Upload tuning client artifact
        uses: actions/upload-artifact@v4
        with:
          name: tuning-client-${{ matrix.client_count }}
          path: tuning_client
